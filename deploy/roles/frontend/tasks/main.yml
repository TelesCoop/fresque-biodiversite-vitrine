- name: Create main user
  user:
    name: "{{ main_user }}"
    uid: "{{ main_user_uid }}"
  become: yes
  become_user: root

- name: Create directories and set permissions
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ main_user }}"
    mode: "{{ item.mode }}"
  loop:
    - path: "/{{ organization_slug }}"
      mode: '2775'
    - path: "/{{ organization_slug }}/{{ project_slug }}"
      mode: '2775'
    - path: "/etc/{{ organization_slug }}"
      mode: '2775'
    - path: "/etc/{{ organization_slug }}/{{ project_slug }}"
      mode: '2775'
    - path: "{{ frontend_path }}"
      mode: '2777'
  become: yes
  become_user: root


- name: Copy nginx config
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/sites-enabled/{{ project_slug }}
    owner: root
    group: root
    mode: 0644
  notify:
    - reload nginx
  become_user: root

- name: Generate frontend /etc/ssh/ RSA host key
  command: "ssh-keygen -q -t ed25519 -a 100 -f {{ frontend_identity_file_path }} -C \"\" -N \"\""
  become_user: "{{ main_user }}"
  args:
    creates: "{{ frontend_identity_file_path }}"
  register: frontend_new_ssh_key

- name: WARNING ABOUT new ssh key
  debug:
    msg: |
      IMPORTANT REMINDER

      A new ssh key has been generated at {{ frontend_identity_file_path }}
      - it should be added to the project deploy keys in Gitlab/Github
      so that we can clone it.
  when: frontend_new_ssh_key.changed

- name: Get new ssh key contents
  command: "cat {{ frontend_identity_file_path }}.pub"
  register: command_output
  when: frontend_new_ssh_key.changed

- name: Print ssh key to console
  debug:
    msg: "{{command_output.stdout}}"
  when: frontend_new_ssh_key.changed

- name: get latest frontend code
  git:
    repo: '{{ frontend_repo }}'
    dest: "{{ frontend_path }}"
    key_file: "{{ frontend_identity_file_path }}"
    accept_hostkey: true
    force: true
    version: master
  become_user: "{{ main_user }}"
  register: clonecode

- name: update frontend static folder
  file:
    path: "{{ frontend_static_path }}"
    state: "{{ item }}"
    owner: www-data
    mode: '2755'
  with_items:
    - absent
    - directory
  become: yes
  become_user: root


- name: update frontend static folder content
  synchronize:
    src: "{{ frontend_path }}/"
    dest: "{{ frontend_static_path }}/"
    rsync_opts:
      - "-og"
      - "--chown=www-data"

  delegate_to: "{{ inventory_hostname }}"
  become: yes
  become_user: root
